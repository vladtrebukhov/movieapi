{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vlad\\\\IdeaProjects\\\\thinq\\\\movieapp\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport './App.css';\nimport Movie from \"./components/MovieComponent\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      originalMovies: []\n    };\n\n    this.getPopularMovies = async () => {\n      let response = await fetch('/getPopular');\n      return await response.json();\n    };\n\n    this.sortByRating = () => {\n      const copyState = { ...this.state\n      };\n      const sortedByRating = copyState.movies.sort((a, b) => b.vote_average - a.vote_average);\n      this.setState({\n        movies: sortedByRating\n      });\n    };\n\n    this.searchCurrentMovies = event => {\n      const searchTerm = event.target.value.toLowerCase();\n      const foundMovies = this.state.originalMovies.filter(movie => movie.title.toLowerCase().indexOf(searchTerm) >= 0);\n      this.setState({\n        movies: foundMovies ? foundMovies : this.state.originalMovies\n      });\n    };\n\n    this.searchNewMovie = event => {\n      const searchTerm = event.target.value().toLowerCase();\n    };\n  }\n\n  componentDidMount() {\n    this.getPopularMovies().then(response => {\n      this.setState({\n        movies: response.results,\n        originalMovies: response.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Search Current Movies: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.searchCurrentMovies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 46\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Search New Movie: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.searchNewMovie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.sortByRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Sort By Rating\")), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Movie Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Release Data\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"Popularity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Average Rating\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Overview\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, this.state.movies.map(({\n      id,\n      title,\n      release_date,\n      popularity,\n      vote_average,\n      overview\n    }) => {\n      return /*#__PURE__*/React.createElement(Movie, {\n        key: id,\n        title: title,\n        id: id,\n        release_date: release_date,\n        popularity: popularity,\n        average_rating: vote_average,\n        overview: overview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 28\n        }\n      });\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Vlad/IdeaProjects/thinq/movieapp/client/src/App.js"],"names":["React","Component","Table","Movie","App","state","movies","originalMovies","getPopularMovies","response","fetch","json","sortByRating","copyState","sortedByRating","sort","a","b","vote_average","setState","searchCurrentMovies","event","searchTerm","target","value","toLowerCase","foundMovies","filter","movie","title","indexOf","searchNewMovie","componentDidMount","then","results","render","map","id","release_date","popularity","overview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport './App.css';\nimport Movie from \"./components/MovieComponent\";\n\nclass App extends Component {\n    state = {\n        movies: [],\n        originalMovies: []\n    };\n\n  componentDidMount() {\n      this.getPopularMovies().then((response) => {\n          this.setState({movies: response.results, originalMovies: response.results});\n      });\n  }\n\n  getPopularMovies = async () => {\n      let response = await fetch('/getPopular');\n      return await response.json();\n  };\n\n  sortByRating = () => {\n      const copyState = {...this.state};\n      const sortedByRating = copyState.movies.sort((a, b) => b.vote_average - a.vote_average);\n      this.setState({movies: sortedByRating });\n  };\n\n  searchCurrentMovies = (event) => {\n    const searchTerm = event.target.value.toLowerCase();\n    const foundMovies = this.state.originalMovies.filter((movie) => movie.title.toLowerCase().indexOf(searchTerm) >= 0);\n    this.setState({movies: foundMovies ? foundMovies : this.state.originalMovies});\n  };\n\n  searchNewMovie = (event) => {\n    const searchTerm = event.target.value().toLowerCase();\n  };\n\n\n  render() {\n    return (\n        <div className=\"App\">\n            <header>\n                <span>Search Current Movies: <input type=\"text\" onChange={this.searchCurrentMovies}/></span>\n                <span>Search New Movie: <input type=\"text\" onChange={this.searchNewMovie}/></span>\n                <button onClick={this.sortByRating}>Sort By Rating</button>\n            </header>\n\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>id</th>\n                    <th>Movie Title</th>\n                    <th>Release Data</th>\n                    <th>Popularity</th>\n                    <th>Average Rating</th>\n                    <th>Overview</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.movies.map(({id, title, release_date, popularity, vote_average, overview}) => {\n                    return <Movie key={id}\n                                  title={title}\n                                  id={id}\n                                  release_date={release_date}\n                                  popularity={popularity}\n                                  average_rating={vote_average}\n                                  overview={overview}/>\n                })}\n                </tbody>\n            </Table>\n        </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}