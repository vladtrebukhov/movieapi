{"ast":null,"code":"const express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst app = express();\nconst port = process.env.PORT || 5000;\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.listen(port, () => console.log(`Listening on port ${port}`));\nexport function getData() {\n  app.get('/', async (req, res) => {\n    const endpointUrl = 'https://jsonplaceholder.typicode.com/posts';\n    const response = await fetch(endpointUrl);\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    res.send(body);\n  });\n}","map":{"version":3,"sources":["C:/Users/Vlad/IdeaProjects/thinq/movieapp/client/src/server.js"],"names":["express","require","bodyParser","app","port","process","env","PORT","use","json","urlencoded","extended","listen","console","log","getData","get","req","res","endpointUrl","response","fetch","body","status","Error","message","send"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AAEA,MAAME,GAAG,GAAGH,OAAO,EAAnB;AACA,MAAMI,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAJ,GAAG,CAACK,GAAJ,CAAQN,UAAU,CAACO,IAAX,EAAR;AACAN,GAAG,CAACK,GAAJ,CAAQN,UAAU,CAACQ,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAR,GAAG,CAACS,MAAJ,CAAWR,IAAX,EAAiB,MAAMS,OAAO,CAACC,GAAR,CAAa,qBAAoBV,IAAK,EAAtC,CAAvB;AAEA,OAAO,SAASW,OAAT,GAAkB;AACrBZ,EAAAA,GAAG,CAACa,GAAJ,CAAQ,GAAR,EAAa,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC7B,UAAMC,WAAW,GAAG,4CAApB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,WAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACX,IAAT,EAAnB;AAEA,QAAIW,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACF,IAAI,CAACG,OAAN,CAAX;AAE7BP,IAAAA,GAAG,CAACQ,IAAJ,CAASJ,IAAT;AACH,GARD;AASH","sourcesContent":["const express = require('express');\r\nconst bodyParser = require('body-parser');\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 5000;\r\n\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.listen(port, () => console.log(`Listening on port ${port}`));\r\n\r\nexport function getData(){\r\n    app.get('/', async (req, res) => {\r\n        const endpointUrl = 'https://jsonplaceholder.typicode.com/posts';\r\n        const response = await fetch(endpointUrl);\r\n        const body = await response.json();\r\n\r\n        if (response.status !== 200) throw Error(body.message);\r\n\r\n        res.send(body);\r\n    });\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}