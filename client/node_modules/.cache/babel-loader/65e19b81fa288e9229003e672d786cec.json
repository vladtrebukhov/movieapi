{"ast":null,"code":"// const express = require('express');\n// const bodyParser = require('body-parser');\n//\nconst http = require('http');\n\nconst port = process.env.PORT || 5000;\nhttp.createServer(async (req, res) => {\n  const endpointUrl = 'https://jsonplaceholder.typicode.com/posts';\n  const response = await fetch(endpointUrl);\n  const body = await response.json();\n  if (response.status !== 200) throw Error(body.message);\n  res.end(body);\n}).listen(port); // const app = express();\n// const port = process.env.PORT || 5000;\n//\n// app.use(bodyParser.json());\n// app.use(bodyParser.urlencoded({ extended: true }));\n// app.listen(port, () => console.log(`Listening on port ${port}`));\n//\n// export function getData() {\n//     app.get('/', async (req, res) => {\n//         const endpointUrl = 'https://jsonplaceholder.typicode.com/posts';\n//         const response = await fetch(endpointUrl);\n//         const body = await response.json();\n//\n//         if (response.status !== 200) throw Error(body.message);\n//\n//         res.send(body);\n//     });\n// }","map":{"version":3,"sources":["C:/Users/Vlad/IdeaProjects/thinq/movieapp/client/src/server.js"],"names":["http","require","port","process","env","PORT","createServer","req","res","endpointUrl","response","fetch","body","json","status","Error","message","end","listen"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAL,IAAI,CAACM,YAAL,CAAkB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAMC,WAAW,GAAG,4CAApB;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,WAAD,CAA5B;AACA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,MAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAE7BR,EAAAA,GAAG,CAACS,GAAJ,CAAQL,IAAR;AACH,CARD,EAQGM,MARH,CAQUhB,IARV,E,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// const express = require('express');\r\n// const bodyParser = require('body-parser');\r\n//\r\nconst http = require('http');\r\nconst port = process.env.PORT || 5000;\r\n\r\nhttp.createServer(async (req, res) => {\r\n    const endpointUrl = 'https://jsonplaceholder.typicode.com/posts';\r\n    const response = await fetch(endpointUrl);\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) throw Error(body.message);\r\n\r\n    res.end(body);\r\n}).listen(port);\r\n\r\n// const app = express();\r\n// const port = process.env.PORT || 5000;\r\n//\r\n// app.use(bodyParser.json());\r\n// app.use(bodyParser.urlencoded({ extended: true }));\r\n// app.listen(port, () => console.log(`Listening on port ${port}`));\r\n//\r\n// export function getData() {\r\n//     app.get('/', async (req, res) => {\r\n//         const endpointUrl = 'https://jsonplaceholder.typicode.com/posts';\r\n//         const response = await fetch(endpointUrl);\r\n//         const body = await response.json();\r\n//\r\n//         if (response.status !== 200) throw Error(body.message);\r\n//\r\n//         res.send(body);\r\n//     });\r\n// }\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}