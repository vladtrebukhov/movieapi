{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vlad\\\\IdeaProjects\\\\thinq\\\\movieapp\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Movie from \"./components/MovieComponent\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      originalMovies: null\n    };\n\n    this.getPopularMovies = async () => {\n      const response = await fetch('/getPopular');\n      return await response.json();\n    };\n\n    this.sortByRating = () => {\n      const movies = this.state.movies;\n      const sortedByRating = movies.sort((a, b) => b.vote_average - a.vote_average);\n      this.setState({\n        movies: sortedByRating\n      });\n    };\n\n    this.sortByTitle = () => {\n      const movies = this.state.movies;\n      const sortedByTitle = movies.sort(function (a, b) {\n        const nameA = a.title.toUpperCase();\n        const nameB = b.title.toUpperCase();\n\n        if (nameA < nameB) {\n          return -1;\n        }\n\n        if (nameA > nameB) {\n          return 1;\n        }\n\n        return 0;\n      });\n      this.setState({\n        movies: sortedByTitle\n      });\n    };\n\n    this.resetFiltering = () => {\n      const originalMovies = this.state.originalMovies;\n      this.setState({\n        movies: originalMovies\n      });\n    };\n\n    this.searchPopularMovies = event => {\n      const originalMovies = this.state.originalMovies;\n      const searchTerm = event.target.value.toLowerCase();\n      const foundMovies = originalMovies.filter(movie => movie.title.toLowerCase().indexOf(searchTerm) >= 0);\n      this.setState({\n        movies: foundMovies ? foundMovies : originalMovies\n      });\n      console.log(this.state.movies);\n    };\n\n    this.getNewMovie = async event => {\n      const searchTerm = event.target.value.toLowerCase();\n      const response = await fetch('/getNewMovie', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: searchTerm\n      });\n      return await response.json();\n    };\n  }\n\n  componentDidMount() {\n    this.getPopularMovies().then(response => {\n      this.setState({\n        movies: response.results,\n        originalMovies: response.results\n      });\n    });\n  }\n\n  render() {\n    const noMoviesFoundMessage = 'This movie was not found. Please search popular movies again with a different term, or search for a new movie.';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar navbar-expand-lg sticky-top navbar-dark bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control mr-sm-2\",\n      type: \"text\",\n      placeholder: \"Search Popular Movies\",\n      onChange: this.searchPopularMovies,\n      \"aria-label\": \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control mr-sm-2\",\n      type: \"text\",\n      placeholder: \"Search New Movie\",\n      onChange: this.getNewMovie,\n      \"aria-label\": \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary \",\n      onClick: this.sortByRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Sort By Rating\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.sortByTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Sort By Movie Title\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.resetFiltering,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Reset Filter\")), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, this.state.movies.length ? /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, \"id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"Movie Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, \"Release Data\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"Popularity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, \"Average Rating\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, \"Overview\"))) : null, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, this.state.movies.map(({\n      id,\n      title,\n      release_date,\n      popularity,\n      vote_average,\n      overview\n    }) => {\n      return /*#__PURE__*/React.createElement(Movie, {\n        key: id,\n        title: title,\n        id: id,\n        release_date: release_date,\n        popularity: popularity,\n        average_rating: vote_average,\n        overview: overview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 28\n        }\n      });\n    }), this.state.movies.length ? null : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 52\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"notFound\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 56\n      }\n    }, noMoviesFoundMessage)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Vlad/IdeaProjects/thinq/movieapp/client/src/App.js"],"names":["React","Component","Table","Movie","App","state","movies","originalMovies","getPopularMovies","response","fetch","json","sortByRating","sortedByRating","sort","a","b","vote_average","setState","sortByTitle","sortedByTitle","nameA","title","toUpperCase","nameB","resetFiltering","searchPopularMovies","event","searchTerm","target","value","toLowerCase","foundMovies","filter","movie","indexOf","console","log","getNewMovie","method","headers","body","componentDidMount","then","results","render","noMoviesFoundMessage","length","map","id","release_date","popularity","overview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport Movie from \"./components/MovieComponent\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    state = {\n        movies: [],\n        originalMovies: null\n    };\n\n  componentDidMount() {\n      this.getPopularMovies().then((response) => {\n          this.setState({movies: response.results, originalMovies: response.results});\n      });\n  }\n\n  getPopularMovies = async () => {\n      const response = await fetch('/getPopular');\n      return await response.json();\n  };\n\n  sortByRating = () => {\n      const movies = this.state.movies;\n      const sortedByRating = movies.sort((a, b) => b.vote_average - a.vote_average);\n      this.setState({movies: sortedByRating });\n\n  };\n\n  sortByTitle = () => {\n      const movies = this.state.movies;\n      const sortedByTitle = movies.sort(function(a, b) {\n          const nameA = a.title.toUpperCase();\n          const nameB = b.title.toUpperCase();\n          if (nameA < nameB) {\n              return -1;\n          }\n          if (nameA > nameB) {\n              return 1;\n          }\n          return 0;\n      });\n      this.setState({movies: sortedByTitle });\n  };\n\n  resetFiltering = () => {\n      const originalMovies = this.state.originalMovies;\n      this.setState({movies: originalMovies});\n  };\n\n  searchPopularMovies = (event) => {\n    const originalMovies = this.state.originalMovies;\n    const searchTerm = event.target.value.toLowerCase();\n    const foundMovies = originalMovies.filter((movie) => movie.title.toLowerCase().indexOf(searchTerm) >= 0);\n    this.setState({movies: foundMovies ? foundMovies : originalMovies});\n    console.log(this.state.movies);\n  };\n\n  getNewMovie = async (event) => {\n    const searchTerm = event.target.value.toLowerCase();\n    const response = await fetch('/getNewMovie', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: searchTerm\n    });\n\n    return await response.json();\n  };\n\n  render() {\n    const noMoviesFoundMessage = 'This movie was not found. Please search popular movies again with a different term, or search for a new movie.';\n    return (\n        <div className=\"App\">\n            <nav className=\"navbar navbar-expand-lg sticky-top navbar-dark bg-dark\">\n                <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search Popular Movies\" onChange={this.searchPopularMovies} aria-label=\"Search\"/>\n                <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search New Movie\" onChange={this.getNewMovie} aria-label=\"Search\"/>\n                <button type=\"button\" className=\"btn btn-primary \" onClick={this.sortByRating}>Sort By Rating</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.sortByTitle}>Sort By Movie Title</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.resetFiltering}>Reset Filter</button>\n            </nav>\n            <Table striped bordered hover>\n                {this.state.movies.length ?\n                    <thead>\n                        <tr>\n                            <th>id</th>\n                            <th>Movie Title</th>\n                            <th>Release Data</th>\n                            <th>Popularity</th>\n                            <th>Average Rating</th>\n                            <th>Overview</th>\n                        </tr>\n                    </thead> : null}\n                <tbody>\n                {this.state.movies.map(({id, title, release_date, popularity, vote_average, overview}) => {\n                    return <Movie key={id}\n                                  title={title}\n                                  id={id}\n                                  release_date={release_date}\n                                  popularity={popularity}\n                                  average_rating={vote_average}\n                                  overview={overview}/>\n                })}\n                {this.state.movies.length ? null : <tr><td className=\"notFound\">{noMoviesFoundMessage}</td></tr>}\n                </tbody>\n            </Table>\n        </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}