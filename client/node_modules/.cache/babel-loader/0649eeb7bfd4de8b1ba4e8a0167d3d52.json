{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vlad\\\\IdeaProjects\\\\thinq\\\\movieapp\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport './App.css';\nimport Movie from \"./components/MovieComponent\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      originalMovies: []\n    };\n\n    this.getPopularMovies = async () => {\n      const response = await fetch('/getPopular');\n      return await response.json();\n    };\n\n    this.sortByRating = () => {\n      const copyState = { ...this.state\n      };\n      const sortedByRating = copyState.movies.sort((a, b) => b.vote_average - a.vote_average);\n      this.setState({\n        movies: sortedByRating\n      });\n    };\n\n    this.sortByTitle = () => {\n      const copyState = { ...this.state\n      };\n      const sortedByRating = copyState.movies.sort((a, b) => a.title - a.title);\n      this.setState({\n        movies: sortedByRating\n      });\n    };\n\n    this.searchPopularMovies = event => {\n      const searchTerm = event.target.value.toLowerCase();\n      const foundMovies = this.state.originalMovies.filter(movie => movie.title.toLowerCase().indexOf(searchTerm) >= 0);\n      this.setState({\n        movies: foundMovies ? foundMovies : this.state.originalMovies\n      });\n    };\n\n    this.searchNewMovie = async event => {\n      const searchTerm = event.target.value.toLowerCase();\n      const response = await fetch('/getNewMovie', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: searchTerm\n      });\n      return await response.json();\n    };\n  }\n\n  componentDidMount() {\n    this.getPopularMovies().then(response => {\n      this.setState({\n        movies: response.results,\n        originalMovies: response.results\n      });\n    });\n  }\n\n  render() {\n    const noMoviesFoundMessage = 'This movie was not found. Please search popular movies again with a different term, or search for a new movie.';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Search Popular Movies: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.searchPopularMovies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 46\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Search New Movie: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.searchNewMovie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.sortByRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Sort By Rating\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.sortByTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Sort By Rating\")), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"Movie Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Release Data\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Popularity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Average Rating\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Overview\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, this.state.movies.map(({\n      id,\n      title,\n      release_date,\n      popularity,\n      vote_average,\n      overview\n    }) => {\n      return /*#__PURE__*/React.createElement(Movie, {\n        key: id,\n        title: title,\n        id: id,\n        release_date: release_date,\n        popularity: popularity,\n        average_rating: vote_average,\n        overview: overview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 28\n        }\n      });\n    }), this.state.movies.length ? null : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 52\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 56\n      }\n    }, noMoviesFoundMessage)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Vlad/IdeaProjects/thinq/movieapp/client/src/App.js"],"names":["React","Component","Table","Movie","App","state","movies","originalMovies","getPopularMovies","response","fetch","json","sortByRating","copyState","sortedByRating","sort","a","b","vote_average","setState","sortByTitle","title","searchPopularMovies","event","searchTerm","target","value","toLowerCase","foundMovies","filter","movie","indexOf","searchNewMovie","method","headers","body","componentDidMount","then","results","render","noMoviesFoundMessage","map","id","release_date","popularity","overview","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport './App.css';\nimport Movie from \"./components/MovieComponent\";\n\nclass App extends Component {\n    state = {\n        movies: [],\n        originalMovies: []\n    };\n\n  componentDidMount() {\n      this.getPopularMovies().then((response) => {\n          this.setState({movies: response.results, originalMovies: response.results});\n      });\n  }\n\n  getPopularMovies = async () => {\n      const response = await fetch('/getPopular');\n      return await response.json();\n  };\n\n  sortByRating = () => {\n      const copyState = {...this.state};\n      const sortedByRating = copyState.movies.sort((a, b) => b.vote_average - a.vote_average);\n      this.setState({movies: sortedByRating });\n  };\n\n  sortByTitle = () => {\n      const copyState = {...this.state};\n      const sortedByRating = copyState.movies.sort((a, b) => a.title - a.title);\n      this.setState({movies: sortedByRating });\n  };\n\n  searchPopularMovies = (event) => {\n    const searchTerm = event.target.value.toLowerCase();\n    const foundMovies = this.state.originalMovies.filter((movie) => movie.title.toLowerCase().indexOf(searchTerm) >= 0);\n    this.setState({movies: foundMovies ? foundMovies : this.state.originalMovies});\n  };\n\n  searchNewMovie = async (event) => {\n    const searchTerm = event.target.value.toLowerCase();\n    const response = await fetch('/getNewMovie', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: searchTerm\n    });\n\n    return await response.json();\n  };\n\n  render() {\n    const noMoviesFoundMessage = 'This movie was not found. Please search popular movies again with a different term, or search for a new movie.';\n    return (\n        <div className=\"App\">\n            <header>\n                <span>Search Popular Movies: <input type=\"text\" onChange={this.searchPopularMovies}/></span>\n                <span>Search New Movie: <input type=\"text\" onChange={this.searchNewMovie}/></span>\n                <button onClick={this.sortByRating}>Sort By Rating</button>\n                <button onClick={this.sortByTitle}>Sort By Rating</button>\n            </header>\n\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>id</th>\n                    <th>Movie Title</th>\n                    <th>Release Data</th>\n                    <th>Popularity</th>\n                    <th>Average Rating</th>\n                    <th>Overview</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.movies.map(({id, title, release_date, popularity, vote_average, overview}) => {\n                    return <Movie key={id}\n                                  title={title}\n                                  id={id}\n                                  release_date={release_date}\n                                  popularity={popularity}\n                                  average_rating={vote_average}\n                                  overview={overview}/>\n                })}\n                {this.state.movies.length ? null : <tr><td>{noMoviesFoundMessage}</td></tr>}\n                </tbody>\n            </Table>\n        </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}